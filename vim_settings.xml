<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/Python Console" timestamp="1574951432710">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement - Noteboke/SMS_Functions.py" timestamp="1573056600375">
        <mark key="i" line="47" column="30" />
        <mark key="[" line="42" column="7" />
        <mark key="]" line="42" column="8" />
        <mark key="^" line="42" column="28" />
        <mark key="." line="42" column="8" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_Functions.py" timestamp="1575120852873">
        <mark key="e" line="513" column="28" />
        <mark key="m" line="212" column="52" />
        <mark key="^" line="117" column="63" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement - Noteboke/SMS_Process.py" timestamp="1573055169842">
        <mark key="[" line="593" column="0" />
        <mark key="]" line="593" column="0" />
        <mark key="^" line="592" column="14" />
        <mark key="." line="593" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/laser_analysis/laser_analysis.py" timestamp="1568373492589">
        <mark key="[" line="100" column="14" />
        <mark key="]" line="99" column="13" />
        <mark key="^" line="99" column="13" />
        <mark key="." line="99" column="13" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_Process.py" timestamp="1575121090715">
        <mark key="e" line="858" column="16" />
        <mark key="'" line="759" column="44" />
        <mark key="i" line="759" column="44" />
        <mark key="[" line="192" column="65" />
        <mark key="]" line="192" column="65" />
        <mark key="^" line="170" column="70" />
        <mark key="." line="192" column="65" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_GUI.py" timestamp="1575119830591">
        <mark key="[" line="243" column="0" />
        <mark key="]" line="243" column="0" />
        <mark key="." line="243" column="0" />
        <mark key="^" line="243" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_Initialize.py" timestamp="1574784015594">
        <mark key="[" line="319" column="63" />
        <mark key="]" line="38" column="0" />
        <mark key="^" line="298" column="10" />
        <mark key="." line="38" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/TextEditTest/TextEditTest.py" timestamp="1574787734183">
        <mark key="[" line="23" column="16" />
        <mark key="]" line="23" column="20" />
        <mark key="." line="23" column="20" />
        <mark key="^" line="23" column="20" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement - Noteboke/SMS_Initialize.py" timestamp="1566918323377">
        <mark key="[" line="26" column="0" />
        <mark key="]" line="295" column="64" />
        <mark key="^" line="295" column="64" />
        <mark key="." line="295" column="64" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement - Noteboke/SMS_GUI.py" timestamp="1574151790608">
        <mark key="[" line="291" column="39" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/SenzorMeassurement/join_images_script.py" timestamp="1575111235152">
        <mark key="[" line="12" column="17" />
        <mark key="]" line="28" column="29" />
        <mark key="^" line="28" column="29" />
        <mark key="." line="28" column="29" />
      </file>
      <file name="D:/Downloads/surface3d_demo2.py" timestamp="1568327217769">
        <mark key="[" line="24" column="11" />
      </file>
      <file name="D:/Downloads/surface3d_demo.py" timestamp="1568367770215">
        <mark key="[" line="41" column="0" />
        <mark key="]" line="41" column="0" />
        <mark key="." line="41" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AI_picture_seminare/AI_PictureRecogntion.py" timestamp="1575113783754">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="191" column="20" filename="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_Process.py" />
      <jump line="56" column="20" filename="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_Process.py" />
      <jump line="688" column="44" filename="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_Process.py" />
      <jump line="11" column="0" filename="$USER_HOME$/PycharmProjects/AI_picture_seminare/AI_PictureRecogntion.py" />
      <jump line="15" column="10" filename="$USER_HOME$/PycharmProjects/AI_picture_seminare/AI_PictureRecogntion.py" />
      <jump line="27" column="14" filename="$USER_HOME$/PycharmProjects/TextEditTest/TextEditTest.py" />
      <jump line="492" column="15" filename="$USER_HOME$/PycharmProjects/SenzorMeassurement/SMS_Functions.py" />
      <jump line="44" column="35" filename="$USER_HOME$/PycharmProjects/AI_picture_seminare/AI_PictureRecogntion.py" />
      <jump line="49" column="43" filename="$USER_HOME$/PycharmProjects/AI_picture_seminare/AI_PictureRecogntion.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>position</text>
      </register>
      <register name="-" type="4">
        <text>position</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxpbWdcPg==</text>
      </register>
      <register name="1" type="4">
        <text>start_routine(&quot;Sensor_A12-&quot; + sType[NumberOfSensor] + &quot;_Measuring-Manually.RTN&quot;)
                            if if_find_error():
                                ErrorId.startMeasuring[NumberOfSensor] = 2
                                save_log(&quot;\n&quot; + datetime.datetime.now().strftime(&quot;%y-%m-%d %H:%M:%S&quot;) +
                                         &quot;| Measurement of the sensor has failed at startup &quot;
                                         &quot;(during start of routine).&quot;)</text>
      </register>
      <register name="2" type="4">
        <text>if manually:
                            pag.click(Position.resetAngle)
                            wait(sleep_until=&quot;resetAngleOn.png&quot;)
                            if if_find_error():
                                ErrorId.startScanning[NumberOfSensor] = 2
                                save_log(&quot;\n&quot; + datetime.datetime.now().strftime(&quot;%y-%m-%d %H:%M:%S&quot;) +
                                         &quot;| Has been detected that result of previous line of code was unsuccessful&quot;
                                         &quot; - wait function (locate on screen) of 'resetAngleOn.png'.&quot;)
                                continue
                            if ErrorId.startScanning[NumberOfSensor] == 0:
                                start_routine(&quot;Sensor_A12-&quot; + sType[NumberOfSensor] + &quot;_Scanning-Manually.RTN&quot;)
                                if if_find_error():
                                    ErrorId.startScanning[NumberOfSensor] = 2
                                    save_log(&quot;\n&quot; + datetime.datetime.now().strftime(&quot;%y-%m-%d %H:%M:%S&quot;)
                                             + &quot;| Scanning of the sensor has failed at startup &quot;
                                             &quot;(during start of routine).&quot;)
                                    continue
                        else:</text>
      </register>
      <register name="3" type="4">
        <text>:
                                ErrorId</text>
      </register>
      <register name="4" type="4">
        <text>)
                            if</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0X3JvdXRpbmUoc3RyKE51bWJlck9mU2Vuc29yICsgMSkgKyAiX2xlZnQiKQo=</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUK</text>
      </register>
      <register name="8" type="4">
        <text encoding="base64">ICAgIFIwID0gCiAgICBSMSA9IEludFZhcigpCiAgICBSMiA9IEludFZhcigpCiAgICBSMyA9IEludFZhcigpCiAgICBSNCA9IEludFZhcigpCiAgICBSNSA9IEludFZhcigp</text>
      </register>
      <register name="9" type="4">
        <text>def measurement_select():
        global mSensor
        if mSensor[NumberOfSensor] == 1:
            mSensor[NumberOfSensor] = 0
        else:
            mSensor[NumberOfSensor] = 1
    # ↑ Switch function of Measurement.


    def scanning_select():
        global sSensor
        if sSensor[NumberOfSensor] == 1:
            sSensor[NumberOfSensor] = 0
        else:
            sSensor[NumberOfSensor] = 1
    # ↑ Switch function of Scanning.


    def aps_select():
        global pSensor
        if pSensor[NumberOfSensor] == 1:
            pSensor[NumberOfSensor] = 0
        else:
            pSensor[NumberOfSensor] = 1
    # ↑ Switch function of automatic position system.</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxpbWdcPg==</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxpbWdcPg==</last-pattern>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDx3YWl0XD4=</entry>
        <entry encoding="base64">XDxpbWdcPg==</entry>
      </history-search>
      <history-cmd>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>